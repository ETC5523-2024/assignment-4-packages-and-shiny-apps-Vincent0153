tags$style(HTML("
.content-wrapper, .right-side {
background-color: #f0f0f5;
}
.box {
border-radius: 10px;
box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
}
"))
),
tabItems(
# Data Overview Tab (Now First)
tabItem(tabName = "data",
sidebarLayout(
sidebarPanel(
# Year selector
selectInput("year", "Select Year:",
choices = unique(march_madness_dataset$YEAR),
selected = max(march_madness_dataset$YEAR)),
# Seed range slider
sliderInput("seed_range", "Select Seed Range:",
min = min(march_madness_dataset$SEED),
max = max(march_madness_dataset$SEED),
value = c(min(march_madness_dataset$SEED), max(march_madness_dataset$SEED)),
step = 1),
# Number of teams to display
numericInput("team_count", "Number of Teams to Display:",
value = 10, min = 1, max = nrow(march_madness_dataset))
),
mainPanel(
# Interactive table output
DTOutput("interactiveTable"),
fluidRow(
box(
title = "Field Descriptions", status = "info", solidHeader = TRUE, width = 12,
p("YEAR: Ending year of the team's season."),
p("TEAM: Division I college basketball team."),
p("SEED: Preliminary ranking for the March Madness tournament."),
p("ROUND: The farthest round the team made it in the tournament."),
p("POWER: Calculation of the team's strength relative to other teams in the tournament by Heat Check."),
p("FINALS: The percentage of people who picked the team to win the game in the Finals.")
)
),
fluidRow(
box(
title = "How to Use It?", status = "info", solidHeader = TRUE, width = 12,
p("Use the filters on the left to explore the data. For example, you can filter by year and seed range."),
p("Click on column headers to sort by SEED, POWER, or FINALS."),
p("Use the searching bar to look for the data you want."),
p("You can use the arrow button next to the 'SEED', 'ROUND', 'POWER', 'FINALS' column
to reorder the data in both ascending and descending ways.")
)
)
)
)
),
# Team Power Trends Tab (Now Second)
tabItem(tabName = "chart",
fluidRow(
# Plot box
box(
title = "Power Rating Trends of Teams Over Years", status = "primary", solidHeader = TRUE, width = 8,
plotOutput("lineChart")
),
# Controls box
box(
title = "Controls", status = "primary", solidHeader = TRUE, width = 4,
selectInput("team_selector", "Select Teams to Display:",
choices = unique(march_madness_dataset$TEAM),
selected = unique(march_madness_dataset$TEAM)[1:5],
multiple = TRUE)
)
),
fluidRow(
# Instructions box
box(
title = "Instructions", status = "info", solidHeader = TRUE, width = 12,
h4("How to Use It?"),
p("This line plot illustrates each team's power rating across years."),
p("Use 'Controls' section to select what teams to display."),
p("You can click the search bar and scroll down to find the teams you want
or just use search it through typing.")
)
)
)
)
)
)
# Dashboard UI
ui <- dashboardPage(
skin = "blue",
dashboardHeader(title = "March Madness Dashboard"),
dashboardSidebar(
sidebarMenu(
menuItem("Data Overview", tabName = "data", icon = icon("table")),
menuItem("Team Power Trends", tabName = "chart", icon = icon("chart-line"))
)
),
dashboardBody(
tags$head(
tags$style(HTML("
.content-wrapper, .right-side {
background-color: #f0f0f5;
}
.box {
border-radius: 10px;
box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
}
"))
),
tabItems(
# Data Overview Tab (Now First)
tabItem(tabName = "data",
sidebarLayout(
sidebarPanel(
# Year selector
selectInput("year", "Select Year:",
choices = unique(march_madness_dataset$YEAR),
selected = max(march_madness_dataset$YEAR)),
# Seed range slider
sliderInput("seed_range", "Select Seed Range:",
min = min(march_madness_dataset$SEED),
max = max(march_madness_dataset$SEED),
value = c(min(march_madness_dataset$SEED), max(march_madness_dataset$SEED)),
step = 1),
# Number of teams to display
numericInput("team_count", "Number of Teams to Display:",
value = 10, min = 1, max = nrow(march_madness_dataset))
),
mainPanel(
# Interactive table output
DTOutput("interactiveTable"),
fluidRow(
box(
title = "Field Descriptions", status = "info", solidHeader = TRUE, width = 12,
p("YEAR: Ending year of the team's season."),
p("TEAM: Division I college basketball team."),
p("SEED: Preliminary ranking for the March Madness tournament."),
p("ROUND: The farthest round the team made it in the tournament."),
p("POWER: Calculation of the team's strength relative to other teams in the tournament by Heat Check."),
p("FINALS: The percentage of people who picked the team to win the game in the Finals.")
)
),
fluidRow(
box(
title = "How to Use It?", status = "info", solidHeader = TRUE, width = 12,
p("Use the filters on the left to explore the data. For example, you can filter by year and seed range."),
p("Click on column headers to sort by SEED, POWER, or FINALS."),
p("Use the searching bar to look for the data you want."),
p("You can use the arrow button next to the 'SEED', 'ROUND', 'POWER', 'FINALS' column
to reorder the data in both ascending and descending ways.")
)
)
)
)
),
# Team Power Trends Tab (Now Second)
tabItem(tabName = "chart",
fluidRow(
# Plot box
box(
title = "Power Rating Trends of Teams Over Years", status = "primary", solidHeader = TRUE, width = 8,
plotOutput("lineChart")
),
# Controls box
box(
title = "Controls", status = "primary", solidHeader = TRUE, width = 4,
selectInput("team_selector", "Select Teams to Display:",
choices = unique(march_madness_dataset$TEAM),
selected = unique(march_madness_dataset$TEAM)[1:5],
multiple = TRUE)
)
),
fluidRow(
# Instructions box
box(
title = "Instructions", status = "info", solidHeader = TRUE, width = 12,
h4("How to Use It?"),
p("This line plot illustrates each team's power rating across years."),
p("Use 'Controls' section to select what teams to display."),
p("You can click the search bar and scroll down to find the teams you want
or just use search it through typing.")
)
)
)
)
)
)
runApp('inst/better.R')
march_madness_dataset %>%
filter(SEED %in% c(1,2,3)) %>%
group_by(TEAM) %>%
summarise(Num_Top_Seeds = n()) %>%
arrange(desc(Num_Top_Seeds))
runApp('inst/better.R')
runApp('inst/better.R')
runApp('inst/better.R')
runApp('inst/better.R')
runApp('inst/better.R')
runApp('inst/better.R')
runApp('inst/better.R')
runApp('inst/better.R')
library(shiny)
library(ggplot2)
library(dplyr)
library(DT)
library(shinydashboard)
library(marchmadness)
# 数据格式转换
march_madness_dataset$YEAR <- as.integer(march_madness_dataset$YEAR)
march_madness_dataset$TEAMNO <- as.integer(march_madness_dataset$TEAMNO)
march_madness_dataset$SEED <- as.integer(march_madness_dataset$SEED)
march_madness_dataset$ROUND <- as.integer(march_madness_dataset$ROUND)
# Dashboard UI
ui <- dashboardPage(
skin = "blue",
dashboardHeader(title = "March Madness Dashboard"),
dashboardSidebar(
sidebarMenu(
menuItem("Data Overview", tabName = "data", icon = icon("table")),
menuItem("Team Power Trends", tabName = "chart", icon = icon("chart-line")),
menuItem("3-Seeds Bar Chart", tabName = "bar", icon = icon("bar-chart"))
)
),
dashboardBody(
tags$head(
tags$style(HTML("
.content-wrapper, .right-side {
background-color: #f0f0f5;
}
.box {
border-radius: 10px;
box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
}
"))
),
tabItems(
# Data Overview Tab
tabItem(tabName = "data",
sidebarLayout(
sidebarPanel(
selectInput("year", "Select Year:",
choices = unique(march_madness_dataset$YEAR),
selected = max(march_madness_dataset$YEAR)),
sliderInput("seed_range", "Select Seed Range:",
min = min(march_madness_dataset$SEED),
max = max(march_madness_dataset$SEED),
value = c(min(march_madness_dataset$SEED), max(march_madness_dataset$SEED)),
step = 1),
numericInput("team_count", "Number of Teams to Display:",
value = 10, min = 1, max = nrow(march_madness_dataset))
),
mainPanel(
DTOutput("interactiveTable")
)
)
),
# Team Power Trends Tab
tabItem(tabName = "chart",
fluidRow(
box(
title = "Power Rating Trends of Teams Over Years", status = "primary", solidHeader = TRUE, width = 12,
plotOutput("lineChart")
)
)
),
# Bar Chart Tab with Dynamic Team Selector
tabItem(tabName = "bar",
fluidRow(
box(
title = "Controls", status = "primary", solidHeader = TRUE, width = 4,
uiOutput("dynamic_team_selector")  # 动态团队选择器
),
box(
title = "Number of 1, 2, or 3-Seeds by Team", status = "primary", solidHeader = TRUE, width = 8,
plotOutput("barChart")
)
)
)
)
)
)
# Server逻辑
server <- function(input, output) {
# 计算包含1, 2, 或3-seed的团队，用于动态生成选择器选项
top_teams <- reactive({
march_madness_dataset %>%
filter(SEED %in% c(1, 2, 3)) %>%
group_by(TEAM) %>%
summarise(Num_Top_Seeds = n()) %>%
arrange(desc(Num_Top_Seeds)) %>%
pull(TEAM)
})
# 动态生成团队选择器，仅用于Bar Chart部分
output$dynamic_team_selector <- renderUI({
selectInput(
inputId = "bar_team_selector",
label = "Select Teams to Display:",
choices = top_teams(),
selected = head(top_teams(), 5),  # 默认选择前5个团队
multiple = TRUE
)
})
# 数据总览部分的数据过滤
filtered_data <- reactive({
march_madness_dataset %>%
filter(YEAR == input$year,
SEED >= input$seed_range[1],
SEED <= input$seed_range[2]) %>%
head(input$team_count)
})
# 渲染交互式表格
output$interactiveTable <- renderDT({
datatable(
filtered_data(),
options = list(
pageLength = 10,
order = list(list(0, 'asc'))
),
rownames = FALSE
)
})
# Line Chart数据过滤
line_chart_data <- reactive({
march_madness_dataset %>%
arrange(YEAR)
})
# 渲染折线图
output$lineChart <- renderPlot({
data <- line_chart_data()
ggplot(data, aes(x = YEAR, y = POWER, color = TEAM, group = TEAM)) +
geom_line(size = 1) +
labs(title = "Power Rating Trends of Teams Over Years",
x = "Year", y = "Power Rating") +
theme_minimal()
})
# Bar Chart数据过滤，响应选择器变化
bar_chart_data <- reactive({
march_madness_dataset %>%
filter(SEED %in% c(1, 2, 3), TEAM %in% input$bar_team_selector) %>%
group_by(TEAM) %>%
summarise(Num_Top_Seeds = n()) %>%
arrange(desc(Num_Top_Seeds))
})
# 渲染柱状图，响应选择器变化
output$barChart <- renderPlot({
data <- bar_chart_data()
ggplot(data, aes(x = Num_Top_Seeds, y = reorder(TEAM, Num_Top_Seeds))) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(title = "Number of 1, 2, or 3-Seeds by Team", x = "Number of Top Seeds", y = "Team") +
theme_minimal()
})
}
# 启动应用
shinyApp(ui = ui, server = server)
runApp('inst/better.R')
runApp('inst/better.R')
runApp('inst/better.R')
runApp('inst/better.R')
runApp('inst/better.R')
runApp('inst/shinyapp.R')
runApp('inst/better.R')
devtools::document()
pkgload::dev_help('run_better_app')
marchmadness::run_better_app
run_better_app()
devtools::document()
marchmadness::run_better_app()
?runApp
?run_app
devtools::document()
marchmadness::run_app()
devtools::document()
marchmadness::run_app()
marchmadness::run_better_app()
devtools::build_readme()
marchmadness::run_app()
marchmadness::run_better_app()
usethis::use_pkgdown()
pkgdown::build_site()
library(marchmadness)
data("march_madness_dataset")
marchmadness::run_app()
marchmadness::run_app()
library(marchmadness)
run_app()
devtools::load_all()
marchmadness::run_better_app()
library(marchmadness)
devtools::check()
devtools::install()
library()
marchmadness::run_better_app()
marchmadness::run_app()
marchmadness::run_app()
marchmadness::run_better_app()
marchmadness::run_better_app()
marchmadness::run_better_app()
library(marchmadness)
data("march_madness_dataset")
head(march_madness_dataset,5)
library(marchmadness)
library(ggplot2)
library(tidyverse)
data("march_madness_dataset")
head(march_madness_dataset,5)
View(march_madness_dataset)
data_2024 <- march_madness_dataset |>
filter(YEAR == "2024")
ggplot(data_2024, aes(x = SEED,
y = POWER,
size = FINALS,
label = TEAM,
color = SEED)) +
geom_point(alpha = 0.6) +
scale_size(range = c(1, 10), name = "Finals") +
scale_color_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Bubble Chart: Seed vs Power with Finals Predictions",
x = "Seed",
y = "Power") +
geom_text(aes(label = TEAM), vjust = 1.5, hjust = 1.5, size = 3, color = "black")
library(plotly)
data_2024 <- march_madness_dataset |>
filter(YEAR == "2024")
ggplot(data_2024, aes(x = SEED,
y = POWER,
size = FINALS,
color = SEED)) +
geom_point(alpha = 0.6) +
scale_size(range = c(1, 10), name = "Finals") +
scale_color_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Bubble Chart: Seed vs Power with Finals Predictions",
x = "Seed",
y = "Power")
ggplotly(p)
data_2024 <- march_madness_dataset |>
filter(YEAR == "2024")
p <- ggplot(data_2024, aes(x = SEED,
y = POWER,
size = FINALS,
color = SEED)) +
geom_point(alpha = 0.6) +
scale_size(range = c(1, 10), name = "Finals") +
scale_color_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(title = "Bubble Chart: Seed vs Power with Finals Predictions",
x = "Seed",
y = "Power")
ggplotly(p)
data_2024 <- march_madness_dataset |>
filter(YEAR == "2024")
p <- ggplot(data_2024, aes(
x = SEED,
y = POWER,
size = FINALS,
color = SEED,
text = paste("Team: ", TEAM, "<br>Seed: ", SEED, "<br>Power: ", POWER, "<br>Finals: ", FINALS)
)) +
geom_point(alpha = 0.6) +
scale_size(range = c(1, 10), name = "Finals") +
scale_color_gradient(low = "blue", high = "red") +
theme_minimal() +
labs(
title = "Bubble Chart: Seed vs Power with Finals Predictions",
x = "Seed",
y = "Power"
)
ggplotly(p, tooltip = "text")
ggplot(march_madness_dataset, aes(x = SEED, y = TEAM, fill = POWER)) +
geom_tile() +
scale_fill_gradient(low = "lightblue", high = "red", name = "Power") +
labs(
title = "Heatmap: Seed vs Team with Power as Color",
x = "Seed",
y = "Team"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data_2024, aes(x = SEED, y = TEAM, fill = POWER)) +
geom_tile() +
scale_fill_gradient(low = "lightblue", high = "red", name = "Power") +
labs(
title = "Heatmap: Seed vs Team with Power as Color",
x = "Seed",
y = "Team"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data_2024, aes(x = SEED, y = POWER)) +
geom_point(color = "blue", size = 2) +
facet_grid(. ~ TEAM) +  # Creates a grid of plots for each TEAM
labs(
title = "Seed vs Power Faceted by Team",
x = "Seed",
y = "Power"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data_2024, aes(x = SEED, y = TEAM, fill = POWER)) +
geom_tile() +
scale_fill_gradient(low = "lightblue", high = "red", name = "Power") +
labs(
title = "Heatmap: Seed vs Team with Power as Color",
x = "Seed",
y = "Team"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
pkgdown::build_site()
pkgdown::build_site()
